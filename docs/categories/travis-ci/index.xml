<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Travis-ci on focaaby&#39;s Note</title>
    <link>/categories/travis-ci/</link>
    <description>Recent content in Travis-ci on focaaby&#39;s Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/travis-ci/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Vue project with Travis CI on GitHub Pages</title>
      <link>/blog/build-vue-project-with-travis-ci-on-github-pages/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/build-vue-project-with-travis-ci-on-github-pages/</guid>
      <description>前言 Travis.ci 主要於 GitHub 上時常使用到的持續整合工具，也支援了非常多程式語言，如 Node.js, PHP, Java, C, Golang&amp;hellip;等。這次 slide project 透過 vue-cli 了一個小專案，但是每次都必須手動 push 至 GitHub Pages 覺得有點小困擾，本篇透過 Travis 支援 Open Source 專案方式，設置自動部屬於到專案頁面上。
建立專案 vue-cli 建立 vue 專案，使用的是 webpack 設定檔
vue init webpack ebook-search  GitHub 設定 Personal access tokens 因為必須透過第三方授權讓 Travis 上傳更新 repo，所以必須到設定裡面的 Developer settings &amp;gt; Personal access tokens 新增一個應用程式。
 取得後的 token 切記保密，請勿上傳至公開頁面，如果有洩漏後，可以至設定頁面重新產一組新的 token。  
設定 Travis Dashboard 到 https://travis-ci.org/ ，可以透過 Github 帳號登入並啟用專案
 Travis CI .</description>
    </item>
    
  </channel>
</rss>